/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 door.glb -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    doorwayFront: THREE.Mesh;
    doorwayFront_1: THREE.Mesh;
    door_1: THREE.Mesh;
    door_1_1: THREE.Mesh;
    door_1_2: THREE.Mesh;
  };
  materials: {
    carpetWhite: THREE.MeshStandardMaterial;
    metal: THREE.MeshStandardMaterial;
    metalDark: THREE.MeshStandardMaterial;
    glass: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};
interface GLTFAction extends THREE.AnimationClip {
  name: '';
}
type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
>;

const Door = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('public/models/door.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.doorwayFront.geometry}
        material={materials.carpetWhite}
      />
      <mesh
        geometry={nodes.doorwayFront_1.geometry}
        material={materials.carpetWhite}
      />
      <mesh geometry={nodes.door_1.geometry} material={materials.metal} />
      <mesh geometry={nodes.door_1_1.geometry} material={materials.metalDark} />
      <mesh geometry={nodes.door_1_2.geometry} material={materials.glass} />
    </group>
  );
};

export default Door;
useGLTF.preload('/door.glb');
